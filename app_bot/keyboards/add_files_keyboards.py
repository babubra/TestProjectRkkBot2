from collections import Counter

from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app_bot.keyboards.add_ticket_keyboards import AddTicketTimeCallback


def get_add_files_kb() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤.
    –°–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å" –∏ "–û—Ç–º–µ–Ω–∞".
    """
    builder = InlineKeyboardBuilder()

    builder.button(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å", callback_data="add_files_complete")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="add_files_cancel")
    builder.adjust(1)
    return builder.as_markup()


def get_add_ticket_time_kb(
    occupied_slots: list[str], brigades_count: int
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–µ–∑–¥–∞,
    —É—á–∏—Ç—ã–≤–∞—è –∑–∞–Ω—è—Ç—ã–µ —Å–ª–æ—Ç—ã.
    """
    builder = InlineKeyboardBuilder()

    # –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∫–∞–∂–¥—ã–π —Å–ª–æ—Ç –∑–∞–Ω—è—Ç
    # –ù–∞–ø—Ä–∏–º–µ—Ä: {'09:00': 1, '12:00': 2}
    occupation_counter = Counter(occupied_slots)

    for hour in range(8, 18):
        time_for_button = f"{hour:02d}:00"
        time_for_callback = f"{hour:02d}00"

        # --- –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø ---
        current_occupation = occupation_counter.get(time_for_button, 0)

        button_text = f"{time_for_button}"
        if current_occupation > 0:
            # –ï—Å–ª–∏ —Å–ª–æ—Ç –∑–∞–Ω—è—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
            button_text += f" ({current_occupation}/{brigades_count})"
            if current_occupation >= brigades_count:
                # –ï—Å–ª–∏ –≤—Å–µ –±—Ä–∏–≥–∞–¥—ã –∑–∞–Ω—è—Ç—ã, –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä
                button_text += " üî¥"
        # --- –ö–û–ù–ï–¶ –ù–û–í–û–ô –õ–û–ì–ò–ö–ò ---

        builder.button(
            text=button_text,
            callback_data=AddTicketTimeCallback(
                action="select_time", time_str=time_for_callback
            ).pack(),
        )

    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="add_ticket_cancel")

    time_buttons_count = 10
    adjust_pattern = [2] * (time_buttons_count // 2)
    adjust_pattern.append(1)

    builder.adjust(*adjust_pattern)

    return builder.as_markup()
